server:
  port: 8080

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://10.1.14.10:3306/crm_v5_api_fund?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B0&tinyInt1isBit=false&rewriteBatchedStatements=true
    username: user_v5_dev
    password: 8yknz3#VCRb3RP4CPv
  shardingsphere:
    datasource:
      fund:
        url: ${spring.datasource.url}
        username: ${spring.datasource.username}
        password: ${spring.datasource.password}
        driver-class-name: ${spring.datasource.driver-class-name}
        type: com.alibaba.druid.pool.DruidDataSource
    rules:
      sharding:
        tables:
          api_flow:
            actual-data-nodes: fund.api_flow_${0..79}
            table-strategy:
              standard:
                sharding-column: uuid
                sharding-algorithm-name: custom-sharding
        sharding-algorithms:
          custom-sharding:
            type: CLASS_BASED
            props:
              strategy: STANDARD
              algorithmClassName: com.finpoints.bss.fund.config.CustomSharding

#druid:
#  mysql:
#    usePingMethod: false

mybatis-plus:
  mapper-locations: classpath*:mapping/**/*.xml
  type-aliases-package: com.finpoints.bss.fund.mybatis.mapper
  # 关闭一二级缓存
  configuration:
    local-cache-scope: STATEMENT
    cache-enabled: false
  global-config:
    id-type: 0
    field-strategy: 1
    db-column-underline: true
    refresh-mapper: true
    capital-mode: true
    #    NOT_EMPTY：会对字段值进行null和'' 比较操作
    #    NOT_NULL: 只会进行null检查
    db-config:
      select-strategy: not_empty
      insert-strategy: not_empty
      update-strategy: not_null
      logic-delete-field: isDeleted #全局逻辑删除字段值
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)

management:
  server:
    port: ${MANAGEMENT_PORT:8083}
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: info,health,prometheus

# Spring Doc
springdoc:
  api-docs:
    enabled: true
    groups:
      enabled: true
  swagger-ui:
    enabled: true
    tags-sorter: alpha
    path: /swagger-ui.html
  show-actuator: false
  writer-with-order-by-keys: true
  group-configs:
    - group: client
      display-name: 'Client API'
      packages-to-scan:
        - com.finpoints.bss.fund.port.adapter.restapi.client
    - group: admin
      display-name: 'Admin API'
      packages-to-scan:
        - com.finpoints.bss.fund.port.adapter.restapi.admin
    - group: internal
      display-name: 'Internal API'
      packages-to-scan:
        - com.finpoints.bss.fund.port.adapter.restapi.internal

# RocketMQ config
rocketmq:
  name-server: 10.1.14.71:9876;10.1.14.72:9876
  login:
    name: finpoints
    passwd: AASNsaij92km120121
  consumer:
    access-key: ${rocketmq.login.name}
    secret-key: ${rocketmq.login.passwd}
    enable-msg-trace: true
    group: crm-ddd-fund
  producer:
    access-key: ${rocketmq.login.name}
    secret-key: ${rocketmq.login.passwd}
    enable-msg-trace: true
    group: crm-ddd-fund

# Logging level
logging:
  level:
    org.apache.rocketmq: debug
    org.springframework.boot.availability: debug
